package zlog_proto;

option optimize_for = SPEED;

message MetaLog {
    message StripeHistoryEntry {
        required uint64 pos = 1;
        required uint32 width = 2;
        required uint64 epoch = 3;
    }
    repeated StripeHistoryEntry stripe_history = 1;
}

message MSeqRequest {
    required uint64 epoch = 1;
    required string pool = 2;
    required string name = 3;
    required bool next = 4;
    required uint32 count = 5;
    repeated uint64 stream_ids = 6 [packed = true];
}

message StreamBackPointer {
    required uint64 id = 1;
    repeated uint64 backpointer = 2 [packed = true];
}

message MSeqReply {
    enum Status {
        OK = 0;
        INIT_LOG = 1;
        STALE_EPOCH = 2;
    }
    repeated uint64 position = 1 [packed = true];
    optional Status status = 2 [default = OK];
    repeated StreamBackPointer stream_backpointers = 3;
}

message EntryHeader {
  repeated StreamBackPointer stream_backpointers = 1;
}

message WriteOp {
  required uint64 epoch = 1;
  required uint64 pos = 2;
  required bytes data = 3;
}

message FillOp {
  required uint64 epoch = 1;
  required uint64 pos = 2;
}

message ReadOp {
  required uint64 epoch = 1;
  required uint64 pos = 2;
}

message TrimOp {
  required uint64 epoch = 1;
  required uint64 pos = 2;
}

message SealOp {
  required uint64 epoch = 1;  
}

message MaxPositionOp {
  required uint64 epoch = 1;  
}

message GetProjectionRet {
  required uint64 epoch = 1;
  optional bytes out = 2;  
}

message MaxPositionRet {
  required uint64 pos = 1;
}

message SetProjectionOp {
  required uint64 epoch = 1;
  required bytes data = 2;
}

message GetProjectionOp {
  required uint64 epoch = 1;
  required bool latest = 2; 
}

message GetLatestProjectionOp {
  required uint64 epoch = 1;
}

message SetLatestProjectionOp {
  required uint64 epoch = 1;
}

message GetEpochOp {
  required uint64 epoch = 1;
}

message LogEntry {
  enum Flags {
    DEFAULT = 0;
    INVALIDATED = 1;
    TRIMMED = 2;
  }
  optional Flags flags = 1 [default = DEFAULT];
  optional bytes data = 2;
}

message LogEntryV2 {
  enum Flags {
    DEFAULT = 0;
    INVALIDATED = 1;
    TRIMMED = 2;
  }
  optional Flags flags = 1 [default = DEFAULT];
  optional uint64 offset = 2 [default = 0];
  optional uint64 length = 3 [default = 0];
};
